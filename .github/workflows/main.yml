name: Continuous Persistent VPS

on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:

jobs:
  vps-session:
    runs-on: ubuntu-22.04
    timeout-minutes: 350

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Display startup info
        run: |
          echo "üîë VPS starting with hostname 'notfleppy'"
          echo "Creating username 'not' with password 'fleppy'"
          echo "Root password = fleppy"

      - name: Set hostname
        run: |
          sudo hostnamectl set-hostname notfleppy
          echo "127.0.0.1 notfleppy" | sudo tee -a /etc/hosts

      - name: Set root password
        run: |
          echo "root:fleppy" | sudo chpasswd

      - name: Create user 'not' with password 'fleppy'
        run: |
          if ! id -u not >/dev/null 2>&1; then
            sudo useradd -m -s /bin/bash not
            echo "not:fleppy" | sudo chpasswd
            sudo usermod -aG sudo not
            echo "not ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/not
          fi

      - name: Install prerequisites and rclone
        run: |
          sudo apt update
          sudo apt install -y tmate curl unzip sudo net-tools neofetch rclone zip

      - name: Set up rclone config
        run: |
          mkdir -p ~/.config/rclone
          cat > ~/.config/rclone/rclone.conf << EOF
          [gdrivveed]
          type = drive
          client_id = 534417340383-f4b86oa9dffhjuhdh4ekd38b0l9llnum.apps.googleusercontent.com
          client_secret = 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
          scope = drive
          root_folder_id = appDataFolder
          token = {"access_token":"ya29.A0AS3H6Nw_-M7Fn89Slgd6Qr2X_1uz9rvqqnN_FI2auXhTgWO4OAJJGBjR97kdm2xP8FAWcU-ZSX_nZ52E1JMAUzndf2JnNBrk-VBDq1IpZcIM2ZoJmQPMyEhvSwYNAE3uXrioyN35CXp67qkKxM75atvCT7FJdciRG2fQV2mx3uUmE_brcZzVZTeu3J7aElcK2wzAAzIaCgYKAZcSARQSFQHGX2MiIEMzw9B7TjqTc0zDR5oQSw0206","token_type":"Bearer","refresh_token":"1//0gj7FH2qSfLPGCgYIARAAGBASNwF-L9Ir8UTc2ZBaElk1x6Vd7sVujW1X3k5220XOsOFpmf4tgMGjAxkCSzmbDvsPs-9646QalzQ","expiry":"2025-08-31T10:52:03.015014454Z","expires_in":3599}
          team_drive =
          rclone listremotes

      - name: Restore VPS from backup archive
        id: restore
        run: |
          if rclone lsf gdrivveed:vps-backup/backup.zip >/dev/null 2>&1; then
            echo "Backup archive found on Google Drive. Restoring..."
            sudo rclone copy gdrivveed:vps-backup/backup.zip /tmp/backup.zip --progress
            echo "Restoring from archive..."
            sudo unzip -o /tmp/backup.zip -d /
            echo "Backup restored successfully."
            echo "backup_found=true" >> "$GITHUB_OUTPUT"
          else
            echo "No backup archive found. Starting with a fresh VPS."
            echo "backup_found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Install Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh

      - name: Restore Tailscale state
        run: |
          echo "Restoring Tailscale state..."
          sudo mkdir -p /var/lib/tailscale
          if rclone lsf gdrivveed:vps-backup/tailscaled.state >/dev/null 2>&1; then
            sudo rclone copy gdrivveed:vps-backup/tailscaled.state /var/lib/tailscale/tailscaled.state --progress
            echo "Tailscale state restored successfully."
          else
            echo "No previous Tailscale state found. A new one will be created."
          fi

      - name: Start Tailscale
        run: |
          sudo tailscaled &
          sleep 8
          sudo tailscale up --authkey ${{ secrets.TAILSCALE_AUTHKEY }} --hostname=notfleppy || true
          echo "üîó Tailscale IP:"
          tailscale ip -4 || echo "Tailscale IP not found"
          echo "Backing up new Tailscale state file..."
          sudo rclone copy /var/lib/tailscale/tailscaled.state gdrivveed:vps-backup/ --progress

      - name: Start manual tmate session
        run: |
          # Install tmate
          sudo apt-get install -y tmate
          # Create socket
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          echo ""
          echo "üîë SSH:"
          tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}'
          echo ""
          echo "üåê Web:"
          tmate -S /tmp/tmate.sock display -p '#{tmate_web}'

      - name: Sleep to keep VPS alive
        run: sleep 21600

      - name: Backup essential data to archive (on completion)
        run: |
          echo "Creating essential data backup archive..."
          sudo zip -r /tmp/backup.zip /etc /home /root /var/www /var/lib/tailscale
          echo "Uploading backup archive to Google Drive..."
          sudo rclone copy /tmp/backup.zip gdrivveed:vps-backup/ --progress
          echo "Backup uploaded successfully."

      - name: Final Backup on Cancel 
        if: ${{ cancelled() }}
        run: |
          echo "Workflow canceled. Performing final backup..."
          sudo zip -r /tmp/backup.zip /etc /home /root /var/www /var/lib/tailscale
          echo "Uploading final backup archive to Google Drive..."
          sudo rclone copy /tmp/backup.zip gdrivveed:vps-backup/ --progress
          echo "Final backup completed."
