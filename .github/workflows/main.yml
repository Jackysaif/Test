name: Persistent VPS with Backup & Restore

on:
  workflow_dispatch:
  workflow_call:
  schedule:
    - cron: "0 */6 * * *"

jobs:
  vps:
    runs-on: ubuntu-22.04
    timeout-minutes: 360

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Install dependencies including rclone
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y unzip zip curl wget tmate rclone

      - name: Create user jacky
        run: |
          if ! id -u jacky >/dev/null 2>&1; then
            sudo useradd -m -s /bin/bash jacky
            echo "jacky:root" | sudo chpasswd
            echo "‚úÖ User jacky created with password 'root'"
          else
            echo "‚ÑπÔ∏è User jacky already exists"
          fi

      - name: Install & setup Tailscale
        run: |
          set -x
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up --authkey tskey-auth-kodgmRrzjh11CNTRL-JTL6FCKJPCC6gMwL6o7HCCJVk67E9VU7 --hostname github-vps --ssh
          echo "üéâ Connected to Tailscale!"
          echo "üåê Tailscale IP: $(tailscale ip -4)"
          echo "üë§ Username: jacky"
          echo "üîë Password: root"

      # === Restore Section ===
      - name: Download latest backup from MEGA
        run: |
          mkdir -p restore
          rclone copy mega:/vps-backup/latest.tar.gz restore/ || echo "‚ÑπÔ∏è No previous backup found"

      - name: Restore backup if exists
        run: |
          if [ -f restore/latest.tar.gz ]; then
            echo "üì¶ Restoring backup..."
            sudo tar -xzf restore/latest.tar.gz -C /
            echo "‚úÖ Restore complete."
          else
            echo "‚ö†Ô∏è No backup found to restore."
          fi

      # === Backup Section ===
      - name: Backup VPS data
        run: |
          mkdir -p backup
          echo "üì¶ Backing up user jacky home directory..."
          sudo tar -czf backup/jacky-home.tar.gz /home/jacky

          if [ -d /www/server ]; then
            echo "üì¶ Backing up aaPanel..."
            sudo tar -czf backup/aapanel.tar.gz /www/server
          else
            echo "‚ÑπÔ∏è aaPanel not installed, skipping..."
          fi

          if [ -f /var/lib/tailscale/tailscaled.state ]; then
            echo "üì¶ Backing up Tailscale state..."
            sudo cp /var/lib/tailscale/tailscaled.state backup/
          fi

          echo "‚úÖ Backup complete:"
          ls -lh backup

      - name: Upload backup to MEGA
        run: |
          BACKUP_FILE="backup/latest.tar.gz"
          tar -czf $BACKUP_FILE -C backup .
          rclone mkdir mega:/vps-backup || true
          rclone copy $BACKUP_FILE mega:/vps-backup --progress

      # === Final Backup on Cancel ===
      - name: Final backup on cancel
        if: cancelled()
        run: |
          echo "‚ö†Ô∏è Workflow cancelled, taking final backup..."
          BACKUP_FILE="backup/cancelled-$(date +%s).tar.gz"
          tar -czf $BACKUP_FILE -C backup .
          rclone copy $BACKUP_FILE mega:/vps-backup --progress
