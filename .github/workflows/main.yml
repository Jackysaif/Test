name: Persistent VPS (Artifacts)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"

jobs:
  vps-session:
    runs-on: ubuntu-22.04
    timeout-minutes: 370   # slightly over 6h
    steps:
      # --- Setup environment ---
      - name: Install required packages
        run: |
          sudo apt update
          sudo apt install -y sudo curl unzip zip tmate net-tools neofetch

      - name: Set timestamps
        run: |
          echo "START_TIME=$(date +%Y%m%d_%H%M%S)" >> $GITHUB_ENV

      # --- Restore from previous artifacts ---
      - name: Download VPS backup if exists
        uses: actions/download-artifact@v4
        with:
          name: vps-backup-latest
          path: restore
        continue-on-error: true

      - name: Restore VPS data
        run: |
          if [ -d restore ]; then
            echo "♻️ Restoring VPS backup..."
            sudo cp -r restore/etc/* /etc/ || true
            sudo cp -r restore/home/* /home/ || true
            sudo cp -r restore/var/www/* /var/www/ || true
          else
            echo "⚠️ No previous backup found. Fresh session."
          fi

      - name: Download Tailscale state if exists
        uses: actions/download-artifact@v4
        with:
          name: tailscale-state
          path: tailscale_restore
        continue-on-error: true

      - name: Restore Tailscale state
        run: |
          sudo mkdir -p /var/lib/tailscale
          if [ -f tailscale_restore/tailscaled.state ]; then
            echo "♻️ Restoring Tailscale state..."
            sudo cp tailscale_restore/tailscaled.state /var/lib/tailscale/tailscaled.state
          else
            echo "⚠️ No previous Tailscale state found."
          fi

      # --- Setup system user ---
      - name: Create user jacky
        run: |
          sudo useradd -m -s /bin/bash jacky || true
          echo 'jacky:root' | sudo chpasswd
          echo "✅ User jacky created with password root"

      # --- Setup Tailscale ---
      - name: Install Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscaled --cleanup || true
          sudo nohup tailscaled > /dev/null 2>&1 &
          sleep 5
          if [ -f /var/lib/tailscale/tailscaled.state ]; then
            echo "🔗 Connecting with restored Tailscale state..."
            sudo tailscale up --authkey "${{ secrets.TAILSCALE_AUTHKEY }}" --hostname "gh-vps" || true
          else
            echo "🔗 New Tailscale login..."
            sudo tailscale up --authkey "${{ secrets.TAILSCALE_AUTHKEY }}" --hostname "gh-vps"
          fi
          sudo tailscale ip -4

      # --- Session info ---
      - name: System Info
        run: |
          echo "🖥️ System Info:"
          neofetch --stdout || true
          echo "🌐 Network:"
          ip addr show | grep inet || true
          echo "💾 Disk:"
          df -h / || true

      # --- Keep alive session (6h) ---
      - name: Keep VPS alive
        run: |
          echo "🔗 Starting tmate session..."
          tmate -F &
          sleep 21600 &  # 6h
          wait

      # --- Backup before exit ---
      - name: Prepare VPS backup
        run: |
          mkdir -p backup/{etc,home,var/www}
          sudo cp -r /etc backup/etc || true
          sudo cp -r /home backup/home || true
          sudo cp -r /var/www backup/var/www || true

      - name: Upload VPS backup (Artifacts)
        uses: actions/upload-artifact@v4
        with:
          name: vps-backup-latest
          path: backup/
          retention-days: 3

      - name: Backup Tailscale state
        run: |
          mkdir -p ts-backup
          sudo cp /var/lib/tailscale/tailscaled.state ts-backup/tailscaled.state || true

      - name: Upload Tailscale state (Artifacts)
        uses: actions/upload-artifact@v4
        with:
          name: tailscale-state
          path: ts-backup/
          retention-days: 3

      # --- Final log ---
      - name: Completion summary
        run: |
          echo ""
          echo "🎉 ================================="
          echo "✅ VPS SESSION COMPLETED"
          echo "🎉 ================================="
          echo ""
          echo "📦 Backups stored as GitHub Artifacts:"
          echo "   - vps-backup-latest"
          echo "   - tailscale-state"
