name: Persistent VPS with Backup & Restore

on:
  workflow_dispatch:
  workflow_call:
  schedule:
    - cron: "0 */6 * * *"  # every 6 hours

jobs:
  vps:
    runs-on: ubuntu-22.04
    timeout-minutes: 360

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create restricted user
        run: |
          if ! id -u jacky >/dev/null 2>&1; then
            sudo useradd -m -s /bin/bash jacky
            echo "jacky:root" | sudo chpasswd
            echo "User jacky created with password root"
          else
            echo "User jacky already exists"
          fi

      - name: Setup rclone with MEGA
        run: |
          mkdir -p ~/.config/rclone
          cat > ~/.config/rclone/rclone.conf <<EOF
          [mega]
          type = mega
          user = rajeeshsksbx7@gmail.com
          pass = EfABK_S7bUsZtacq8JlaxYackzNv7KmZAQ1mpA
          EOF

      - name: Download latest backup from MEGA
        run: |
          mkdir -p restore
          if rclone copy mega:/vps-backup/latest.tar.gz restore/ --progress; then
            echo "✅ Backup found, restoring..."
          else
            echo "ℹ️ No previous backup found"
          fi

      - name: Restore backup if exists
        run: |
          if [ -f restore/latest.tar.gz ]; then
            echo "📦 Restoring backup..."
            sudo tar -xzf restore/latest.tar.gz -C /
          else
            echo "⚠️ No backup to restore"
          fi

      - name: Setup Tailscale
        run: |
          set -x
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up --authkey ${{ secrets.TAILSCALE_AUTHKEY }} --hostname github-vps --ssh
          echo "🎉 Connected to Tailscale!"
          tailscale ip -4
          echo "👤 Username: jacky"
          echo "🔑 Password: root"

      - name: Backup VPS data
        run: |
          mkdir -p backup
          echo "📦 Backing up user jacky home directory..."
          sudo tar --exclude='*.tar.gz' -czf backup/jacky-home.tar.gz /home/jacky
          echo "✅ Backup complete"
          ls -lh backup/

      - name: Upload backup to MEGA
        run: |
          BACKUP_FILE="latest.tar.gz"
          tar --exclude='*.tar.gz' -czf $BACKUP_FILE -C backup .
          rclone mkdir mega:/vps-backup || true
          rclone copy $BACKUP_FILE mega:/vps-backup --progress

      - name: Final backup on cancel
        if: cancelled()
        run: |
          echo "⚠️ Workflow cancelled, saving backup..."
          BACKUP_FILE="cancelled-$(date +%s).tar.gz"
          tar --exclude='*.tar.gz' -czf $BACKUP_FILE -C backup .
          rclone copy $BACKUP_FILE mega:/vps-backup --progress
