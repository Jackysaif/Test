name: üï∑Ô∏è Spidey Persistent VPS - Snapshot Optimized

on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:

env:
  SNAPSHOT_NAME: vps-snapshot-latest.img
  SNAPSHOT_MOUNT: /mnt/snapshot
  MEGA_REMOTE: mega:vps-backup

jobs:
  vps:
    runs-on: ubuntu-22.04
    timeout-minutes: 360

    steps:
      # 1. Initial Setup
      - name: üë§ Create User & Set Hostname
        run: |
          echo "üöÄ Creating universal user and hostname setup..."
          sudo useradd -m -s /bin/bash jacky
          echo "jacky:root" | sudo chpasswd
          sudo usermod -aG sudo jacky
          echo "jacky ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/jacky
          sudo hostnamectl set-hostname github-vps

      # 2. Install Required Tools
      - name: ‚ö° Install System Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y curl wget unzip tar psmisc screen openssh-server \
            mariadb-server apache2 php php-mysql qemu-utils cloud-utils
          curl -fsSL https://rclone.org/install.sh | sudo bash
          sudo systemctl enable --now ssh

      # 3. Configure Rclone for MEGA
      - name: ‚òÅÔ∏è Configure Rclone (MEGA)
        run: |
          mkdir -p ~/.config/rclone
          cat > ~/.config/rclone/rclone.conf <<EOF
          [mega]
          type = mega
          user = ${{ secrets.MEGA_USER }}
          pass = ${{ secrets.MEGA_PASS }}
          EOF

      # 4. Snapshot Restoration
      - name: ‚ôªÔ∏è Restore from Snapshot
        id: restore
        run: |
          echo "üîç Checking for existing snapshot on MEGA..."
          if rclone ls ${MEGA_REMOTE}/${SNAPSHOT_NAME} >/dev/null 2>&1; then
            echo "‚úÖ Snapshot found. Restoring system..."
            
            # Download snapshot
            rclone copy ${MEGA_REMOTE}/${SNAPSHOT_NAME} /tmp/
            
            # Create mount point
            sudo mkdir -p ${SNAPSHOT_MOUNT}
            
            # Mount the snapshot image
            sudo mount -o loop /tmp/${SNAPSHOT_NAME} ${SNAPSHOT_MOUNT}
            
            # Rsync data back to root filesystem
            echo "üîÑ Syncing snapshot data to live system..."
            sudo rsync -a ${SNAPSHOT_MOUNT}/ / --exclude=/proc --exclude=/sys --exclude=/dev
            
            # Cleanup
            sudo umount ${SNAPSHOT_MOUNT}
            sudo rm -f /tmp/${SNAPSHOT_NAME}
            
            echo "is_new_install=false" >> $GITHUB_OUTPUT
          else
            echo "‚ÑπÔ∏è No snapshot found. Fresh installation."
            echo "is_new_install=true" >> $GITHUB_OUTPUT
          fi

      # 5. Delete Old Snapshot
      - name: üóëÔ∏è Delete Old Snapshot
        if: steps.restore.outputs.is_new_install == 'false'
        run: |
          echo "Deleting old snapshot from MEGA..."
          rclone delete ${{ env.MEGA_REMOTE }}/${{ env.SNAPSHOT_NAME }}

      # 6. System Setup & Services
      - name: üöÄ System Setup
        run: |
          # Create essential directories
          sudo mkdir -p /opt /srv /var/www /var/lib/mysql /www/server /home/jacky
          
          # Install Aapanel (non-interactive)
          curl -sSLo /tmp/install.sh http://www.aapanel.com/script/install-ubuntu_6.0_en.sh
          (echo "y" && echo "yes") | sudo bash /tmp/install.sh

      # 7. Start Services
      - name: üöÄ Start Services
        run: |
          sudo systemctl daemon-reload
          
          # Setup Tailscale
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo systemctl enable --now tailscaled
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTHKEY }} --hostname=github-vps --reset || true
          
          sleep 10
          
          # Start services
          sudo systemctl start mariadb || true
          sudo bt restart || true
          sudo systemctl start apache2 || true

      # 8. Configure Aapanel
      - name: üîê Set Aapanel Credentials
        run: |
          echo "jacky" | sudo bt 6
          echo "spidey" | sudo bt 5
          echo "‚úÖ Aapanel configured: jacky/spidey"

      # 9. Start Tmate Session
      - name: üõ∞Ô∏è Start Tmate Session
        run: |
          sudo apt-get install -y tmate
          sudo -u jacky screen -dmS tmate-session tmate
          sleep 3

      # 10. Maintain Session
      - name: ‚è≥ Maintain VPS Session
        run: |
          echo "üñ•Ô∏è VPS is now running. Create '/tmp/stop_session' to shutdown gracefully."
          while [ ! -f /tmp/stop_session ]; do
            sleep 60
          done
          echo "Graceful shutdown initiated."

      # 11. Create Snapshot (Always Runs)
      - name: üíæ Create System Snapshot
        if: always()
        run: |
          echo "üõë Preparing for snapshot..."
          
          # Stop services cleanly
          sudo systemctl stop tailscaled || true
          sudo systemctl stop btpanel.service || true
          sudo systemctl stop apache2 || true
          sudo systemctl stop mariadb || true
          sudo pkill -f "tmate" || true
          
          # Create snapshot image
          echo "üì∏ Creating system snapshot..."
          sudo mkdir -p /mnt/snapshot
          
          # Create a sparse image file (compressed)
          sudo dd if=/dev/zero of=/tmp/${SNAPSHOT_NAME} bs=1M count=1024 oflag=direct
          sudo mkfs.ext4 /tmp/${SNAPSHOT_NAME}
          
          # Mount and copy system data
          sudo mount -o loop /tmp/${SNAPSHOT_NAME} /mnt/snapshot
          
          # Copy essential system data (exclude volatile directories)
          sudo rsync -a --delete \
            --exclude=/proc \
            --exclude=/sys \
            --exclude=/dev \
            --exclude=/tmp \
            --exclude=/run \
            --exclude=/mnt \
            --exclude=/media \
            --exclude=/var/cache \
            --exclude=/var/tmp \
            / /mnt/snapshot/
          
          # Cleanup
          sudo umount /mnt/snapshot
          
          # Compress the snapshot
          echo "üóúÔ∏è Compressing snapshot..."
          sudo gzip /tmp/${SNAPSHOT_NAME}
          
          echo "‚úÖ Snapshot created: /tmp/${SNAPSHOT_NAME}.gz"

      # 12. Upload Snapshot
      - name: ‚òÅÔ∏è Upload Snapshot to MEGA
        if: always()
        run: |
          echo "üöÄ Uploading snapshot to MEGA..."
          rclone copy /tmp/${SNAPSHOT_NAME}.gz ${{ env.MEGA_REMOTE }} --progress
          echo "‚úÖ Snapshot uploaded successfully."

      # 13. Final Cleanup
      - name: üßπ Final Cleanup
        if: always()
        run: |
          sudo rm -f /tmp/${SNAPSHOT_NAME}* /tmp/stop_session
          echo "=== VPS Session Complete ==="
          echo "Final status: ${{ job.status }}"
          echo "Snapshot: ${MEGA_REMOTE}/${SNAPSHOT_NAME}.gz"
