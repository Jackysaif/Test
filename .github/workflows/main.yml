name: VPS Backup and Restore

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"  # every 6 hours

jobs:
  vps-session:
    runs-on: ubuntu-22.04
    timeout-minutes: 380  # 6h20m to allow backups to finish

    steps:
      # ============================================================
      # 0) Prep: packages
      # ============================================================
      - name: "🚀 Install dependencies"
        run: |
          set -e
          echo "🔄 Updating apt & installing required tools..."
          sudo apt-get update
          sudo apt-get install -y sudo curl unzip zip tmate neofetch net-tools rclone tar gzip coreutils

      # ============================================================
      # 1) Configure rclone (REMOTE: gdrivveed)
      #    (use printf lines to avoid YAML heredoc parsing issues)
      # ============================================================
      - name: "☁️ Configure rclone (gdrivveed)"
        run: |
          set -e
          echo "⚙️ Writing rclone.conf for remote 'gdrivveed'..."
          mkdir -p ~/.config/rclone
          cfg="$HOME/.config/rclone/rclone.conf"
          : > "$cfg"
          printf '%s\n' '[gdrivveed]'                                  >> "$cfg"
          printf '%s\n' 'type = drive'                                 >> "$cfg"
          printf '%s\n' 'client_id = 534417340383-f4b86oa9dffhjuhdh4ekd38b0l9llnum.apps.googleusercontent.com' >> "$cfg"
          printf '%s\n' 'client_secret = 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' >> "$cfg"
          printf '%s\n' 'scope = drive'                                >> "$cfg"
          printf '%s\n' 'root_folder_id = appDataFolder'               >> "$cfg"
          printf '%s\n' 'token = {"access_token":"ya29.A0AS3H6Ny6o1OvniaMus3wYXmmqBbanb_MNJmGTEfrQoBCbR_qTGcDCyGrObAOymSrxJ1Nq3g9Rd7JYyvPyD6L4vmgOwuJxEuePxz7--w3-Rl18LBNve5-1s8UVy0T_0VZOnn8TNqVdvScS9atFE8lUu4uPZxwb1ditSB3f9mqzZZOJAiKIXG31PHH9wu8XVdaLSq40pcaCgYKAbcSARQSFQHGX2MizZMgdAx4L1I4h9UJZKs6AQ0206","token_type":"Bearer","refresh_token":"1//0g1VFlKVUuwKlCgYIARAAGBASNwF-L9IrGhVBSYCiWVLzMiBL5VSP4_neIDcsmPELBjeHMIYSmA057I-AxPy2SAXr0nm-6vRRhUQ","expiry":"2025-08-31T15:42:32.953801261Z","expires_in":3599}' >> "$cfg"
          printf '%s\n' 'team_drive ='                                 >> "$cfg"
          echo "✅ rclone configured. Testing remote listing..."
          rclone lsd gdrivveed: || (echo "❌ rclone cannot access Drive remote 'gdrivveed'"; exit 1)

      # ============================================================
      # 2) Create user & password
      # ============================================================
      - name: "👤 Create local user"
        run: |
          set -e
          if ! id "jacky" >/dev/null 2>&1; then
            echo "👤 Creating user 'jacky'..."
            sudo useradd -m -s /bin/bash jacky
            echo "jacky:root" | sudo chpasswd
            sudo usermod -aG sudo jacky
          else
            echo "ℹ️ User 'jacky' already exists, skipping."
          fi
          echo "✅ User ready."

      # ============================================================
      # 3) Restore Tailscale state if present
      # ============================================================
      - name: "🔄 Restore Tailscale state (if exists)"
        run: |
          set -e
          echo "📂 Checking Drive for /vps-backup/system/tailscaled.state ..."
          sudo mkdir -p /var/lib/tailscale
          if rclone ls gdrivveed:vps-backup/system/tailscaled.state >/dev/null 2>&1; then
            echo "🔥 Found tailscaled.state in Drive. Restoring..."
            sudo rclone copy gdrivveed:vps-backup/system/tailscaled.state /var/lib/tailscale/ --progress
            sudo chown root:root /var/lib/tailscale/tailscaled.state
            sudo chmod 600 /var/lib/tailscale/tailscaled.state
            echo "TS_STATE_RESTORED=true" >> "$GITHUB_ENV"
          else
            echo "ℹ️ No previous tailscaled.state found. Will create new identity."
            echo "TS_STATE_RESTORED=false" >> "$GITHUB_ENV"
          fi

      # ============================================================
      # 4) Install & connect Tailscale
      #    - If state restored: reuse it
      #    - If no state: login with auth key (from GitHub Secret) and back up state immediately
      # ============================================================
      - name: "🌐 Install & Start Tailscale"
        run: |
          set -e
          echo "⬇️ Installing Tailscale..."
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo systemctl enable --now tailscaled
          if [ "${TS_STATE_RESTORED:-false}" = "true" ]; then
            echo "🔁 Reusing restored Tailscale state..."
            sudo tailscale up --reset --accept-routes --accept-dns || true
          else
            echo "🆕 No state restored. Logging in with new identity..."
            sudo tailscale up --authkey "${{ secrets.TAILSCALE_AUTHKEY }}" --hostname "github-vps-$(date +%s)" --accept-routes --accept-dns || true
            echo "💾 Backing up newly created tailscaled.state..."
            sudo rclone copy /var/lib/tailscale/tailscaled.state gdrivveed:vps-backup/system/ --progress || true
          fi
          echo "🔑 Tailscale IPs:"
          sudo tailscale ip -4 || true
          sudo tailscale ip -6 || true

      # ======================================
