name: Persistent VPS with Backup

on:
  workflow_dispatch:
  push:
  schedule:
    - cron: "0 */6 * * *"

jobs:
  vps-session:
    runs-on: ubuntu-22.04
    timeout-minutes: 720 # 12 hours
    steps:

      - name: Checkout repo
        uses: actions/checkout@v4

      # ===============================
      # Restore Previous VPS Backup
      # ===============================
      - name: Download VPS backup if exists
        uses: actions/download-artifact@v4
        with:
          name: vps-backup-latest
          path: backup
        continue-on-error: true

      - name: Restore VPS files
        run: |
          set -e
          if [ -f backup/vps-backup-latest.tar.gz ]; then
            echo "Restoring VPS backup..."
            sudo tar -xzf backup/vps-backup-latest.tar.gz -C /
          else
            echo "No VPS backup found."
          fi

      # ===============================
      # Restore Tailscale State
      # ===============================
      - name: Download Tailscale state if exists
        uses: actions/download-artifact@v4
        with:
          name: tailscale-state
          path: ts-backup
        continue-on-error: true

      - name: Restore Tailscale state
        run: |
          set -e
          if [ -f ts-backup/tailscale-state.tar.gz ]; then
            echo "Restoring Tailscale state..."
            sudo mkdir -p /var/lib/tailscale
            sudo tar -xzf ts-backup/tailscale-state.tar.gz -C /var/lib/tailscale || true
          else
            echo "No Tailscale state found."
          fi

      # ===============================
      # Install Packages
      # ===============================
      - name: Install dependencies
        run: |
          set -e
          sudo apt update
          sudo apt install -y sudo curl unzip zip tmate net-tools neofetch

      - name: Install Tailscale
        run: |
          set -e
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up --authkey ${{ secrets.TAILSCALE_AUTHKEY }} --hostname github-vps || true

      - name: System Info
        run: |
          set -e
          neofetch || true
          ifconfig || true
          whoami

      # ===============================
      # Keep VPS Alive
      # ===============================
      - name: Keep VPS alive
        run: |
          set -e
          echo "Starting tmate session..."
          sudo tmate -S /tmp/tmate.sock new-session -d
          sudo tmate -S /tmp/tmate.sock wait tmate-ready
          echo "üîó SSH session: $(sudo tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')"
          echo "üåç Web session: $(sudo tmate -S /tmp/tmate.sock display -p '#{tmate_web}')"
          sleep 43200 || true  # 12 hours
        continue-on-error: true

      # ===============================
      # Backup VPS (Always Run)
      # ===============================
      - name: Create VPS backup
        if: always()
        run: |
          set -e
          echo "Creating VPS backup..."
          sudo mkdir -p backup
          sudo tar -czf backup/vps-backup-latest.tar.gz \
            --exclude=/proc --exclude=/sys --exclude=/dev --exclude=/tmp \
            --exclude=/run --exclude=/mnt --exclude=/media --exclude=/lost+found \
            /

      - name: Upload VPS backup
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vps-backup-latest
          path: backup/vps-backup-latest.tar.gz
          retention-days: 3

      # ===============================
      # Backup Tailscale State
      # ===============================
      - name: Backup Tailscale state
        if: always()
        run: |
          set -e
          echo "Backing up Tailscale state..."
          sudo mkdir -p ts-backup
          if [ -d /var/lib/tailscale ]; then
            sudo tar -czf ts-backup/tailscale-state.tar.gz -C /var/lib/tailscale .
          else
            echo "No tailscale state found, skipping."
          fi

      - name: Upload Tailscale state
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tailscale-state
          path: ts-backup/tailscale-state.tar.gz
          retention-days: 3

      # ===============================
      # Completion Summary
      # ===============================
      - name: Completion summary
        if: always()
        run: |
          echo ""
          echo "üéâ ================================="
          echo "‚úÖ VPS SESSION COMPLETED (or Cancelled ‚Äì Backup Saved)"
          echo "üéâ ================================="
          echo ""
          echo "üì¶ Artifacts saved:"
          echo " - vps-backup-latest"
          echo " - tailscale-state"
