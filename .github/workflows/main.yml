name: Persistent VPS Session

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"

jobs:
  vps-session:
    runs-on: ubuntu-22.04
    timeout-minutes: 360

    steps:
      # Checkout repo (required for artifacts pathing)
      - name: Checkout
        uses: actions/checkout@v4

      # Create jacky user
      - name: Create user jacky
        run: |
          sudo useradd -m -s /bin/bash jacky || true
          echo "jacky:root" | sudo chpasswd
          echo "‚úÖ User jacky created with password root"

      # Restore VPS backup if exists
      - name: Download VPS backup if exists
        uses: actions/download-artifact@v4
        with:
          name: vps-backup-latest
          path: restore
        continue-on-error: true

      - name: Restore VPS files
        if: success()
        run: |
          if [ -f restore/vps-backup.tar.gz ]; then
            echo "üì¶ Restoring VPS from backup..."
            sudo tar -xzf restore/vps-backup.tar.gz -C /
          else
            echo "‚ÑπÔ∏è No previous backup found"
          fi

      # Restore Tailscale state
      - name: Download Tailscale state if exists
        uses: actions/download-artifact@v4
        with:
          name: tailscale-state
          path: ts-restore
        continue-on-error: true

      - name: Restore Tailscale state
        run: |
          if [ -d ts-restore ]; then
            sudo mkdir -p /var/lib/tailscale
            sudo cp -r ts-restore/* /var/lib/tailscale/ || true
            echo "üîÑ Restored Tailscale state"
          fi

      # Install Tailscale
      - name: Install Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTHKEY }} --hostname=github-vps --ssh

      # System Info
      - name: System Info
        run: |
          uname -a
          lsb_release -a || true
          df -h
          free -h

      # Keep VPS alive
      - name: Keep VPS alive
        run: |
          set -e
          echo "üîó Starting tmate session..."
          sudo apt-get update && sudo apt-get install -y tmate
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          echo "ssh session: $(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')"
          echo "web session: $(tmate -S /tmp/tmate.sock display -p '#{tmate_web}')"
          echo "‚ö†Ô∏è Workflow stopped ‚Äî running backup before exit..."
        if: always()

      # Save VPS backup (on success or cancel)
      - name: Create VPS backup archive
        if: always()
        run: |
          echo "üì¶ Creating VPS backup..."
          sudo mkdir -p backup
          sudo tar -czf backup/vps-backup.tar.gz \
            --exclude=/proc --exclude=/sys --exclude=/dev --exclude=/tmp \
            /etc /home || true
          ls -lh backup

      - name: Upload VPS backup
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vps-backup-latest
          path: backup/vps-backup.tar.gz
          retention-days: 3
          overwrite: true

      # Save Tailscale state
      - name: Save Tailscale state
        if: always()
        run: |
          sudo mkdir -p ts-backup
          sudo cp -r /var/lib/tailscale/* ts-backup/ || true

      - name: Upload Tailscale state
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tailscale-state
          path: ts-backup/

      # Completion summary
      - name: Completion summary
        if: always()
        run: |
          echo ""
          echo "üéâ ================================"
          echo "‚úÖ VPS SESSION COMPLETED (or Cancelled ‚Äì Backup Saved)"
          echo "üéâ ================================"
          echo "üì¶ Artifacts saved:"
          echo " - vps-backup-latest"
          echo " - tailscale-state"
