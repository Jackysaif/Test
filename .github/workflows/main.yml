name: Continuous Persistent VPS

on:
  schedule:
    - cron: '0 */6 * * *'   # Every 6 hours
  workflow_dispatch:

jobs:
  vps-session:
    runs-on: ubuntu-22.04
    timeout-minutes: 360

    steps:
      # ----------------------------------------------------
      # 1. Install dependencies
      # ----------------------------------------------------
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y sudo curl unzip zip rclone tmate net-tools neofetch figlet toilet \
            libssl-dev libffi-dev python3-dev python3-pip jq lsb-release gnupg ca-certificates \
            apt-transport-https git build-essential wget nano htop

      # ----------------------------------------------------
      # 2. Configure rclone for Google Drive
      # ----------------------------------------------------
      - name: Configure rclone (gdrivveed)
        run: |
          set -e
          mkdir -p ~/.config/rclone
          cat > ~/.config/rclone/rclone.conf <<EOF
[gdrivveed]
type = drive
client_id = 534417340383-f4b86oa9dffhjuhdh4ekd38b0l9llnum.apps.googleusercontent.com
client_secret = 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
scope = drive
token = {"access_token":"ya29.A0AS3H6Ny6o1OvniaMus3wYXmmqBbanb_MNJmGTEfrQoBCbR_qTGcDCyGrObAOymSrxJ1Nq3g9Rd7JYyvPyD6L4vmgOwuJxEuePxz7--w3-Rl18LBNve5-1s8UVy0T_0VZOnn8TNqVdvScS9atFE8lUu4uPZxwb1ditSB3f9mqzZZOJAiKIXG31PHH9wu8XVdaLSq40pcaCgYKAbcSARQSFQHGX2MizZMgdAx4L1I4h9UJZKs6AQ0206","token_type":"Bearer","refresh_token":"1//0g1VFlKVUuwKlCgYIARAAGBASNwF-L9IrGhVBSYCiWVLzMiBL5VSP4_neIDcsmPELBjeHMIYSmA057I-AxPy2SAXr0nm-6vRRhUQ","expiry":"2025-08-31T15:42:32.953801261Z","expires_in":3599}
team_drive =
EOF
          echo "✅ rclone configured. Testing remote listing..."
          rclone lsd gdrivveed: || (echo "❌ rclone cannot access Drive remote 'gdrivveed'" && exit 1)

      # ----------------------------------------------------
      # 3. Create local user
      # ----------------------------------------------------
      - name: Create local user
        run: |
          sudo useradd -m -s /bin/bash jacky || true
          echo "jacky:root" | sudo chpasswd
          echo "✅ User 'jacky' created with password 'root'"

      # ----------------------------------------------------
      # 4. Restore VPS state if backup exists
      # ----------------------------------------------------
      - name: Restore VPS state (if exists)
        run: |
          set -e
          mkdir -p ~/restore
          if rclone lsf gdrivveed:backup/ | grep -q "vps_backup.tar.gz"; then
            echo "🔄 Backup found. Restoring VPS state..."
            rclone copy gdrivveed:backup/vps_backup.tar.gz ~/restore/
            sudo tar -xzf ~/restore/vps_backup.tar.gz -C /
            echo "✅ Restore completed"
          else
            echo "⚠️ No backup found, skipping restore"
          fi

      # ----------------------------------------------------
      # 5. Install & Start Tailscale
      # ----------------------------------------------------
      - name: Install & Start Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up --authkey tskey-auth-kodgmRrzjh11CNTRL-JTL6FCKJPCC6gMwL6o7HCCJVk67E9VU7 --hostname github-vps --ssh
          echo "✅ Tailscale started"

      # ----------------------------------------------------
      # 6. Run tmate session for remote access
      # ----------------------------------------------------
      - name: Start tmate session
        run: |
          echo "🔑 Starting tmate session..."
          sudo tmate -F &

      # ----------------------------------------------------
      # 7. Backup VPS state to Google Drive
      # ----------------------------------------------------
      - name: Backup VPS state
        if: always()
        run: |
          set -e
          echo "📦 Creating backup..."
          mkdir -p ~/backup
          sudo tar -czf ~/backup/vps_backup.tar.gz /home/jacky || true
          echo "☁️ Uploading backup to Google Drive..."
          rclone copy ~/backup/vps_backup.tar.gz gdrivveed:backup/ --progress
          echo ""
          echo "🎉 ================================="
          echo "✅ VPS BACKUP COMPLETED SUCCESSFULLY"
          echo "🎉 ================================="
          echo ""
          echo "📊 Backup Statistics:"
          du -sh ~/backup/vps_backup.tar.gz || echo "Backup size calculation failed"

      # ----------------------------------------------------
      # 8. Job completed
      # ----------------------------------------------------
      - name: Complete job
        run: echo "✅ VPS job finished"
