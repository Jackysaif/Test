name: Continuous Persistent VPS

on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:

jobs:
  vps-session:
    runs-on: ubuntu-22.04
    timeout-minutes: 350

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Display startup info
        run: |
          echo "üîë VPS starting with hostname 'notfleppy'"
          echo "Creating username 'not' with password 'fleppy'"
          echo "Root password = fleppy"

      - name: Set hostname
        run: |
          sudo hostnamectl set-hostname notfleppy
          echo "127.0.0.1 notfleppy" | sudo tee -a /etc/hosts

      - name: Set root password
        run: |
          echo "root:fleppy" | sudo chpasswd

      - name: Create user 'not' with password 'fleppy'
        run: |
          if ! id -u not >/dev/null 2>&1; then
            sudo useradd -m -s /bin/bash not
            echo "not:fleppy" | sudo chpasswd
            sudo usermod -aG sudo not
            echo "not ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/not
          fi

      - name: Install prerequisites and rclone
        run: |
          sudo apt update
          sudo apt install -y tmate curl unzip sudo net-tools neofetch rclone tar

      - name: Set up rclone config
        run: |
          mkdir -p ~/.config/rclone
          cat > ~/.config/rclone/rclone.conf << EOF
          [gdrivveed]
          type = drive
          client_id = 534417340383-f4b86oa9dffhjuhdh4ekd38b0l9llnum.apps.googleusercontent.com
          client_secret = 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
          scope = drive
          root_folder_id = 
          token = {"access_token":"ya29.A0AS3H6Nzwim-1TEvkN3nVfRGSdWwIMFqMote2k5sALdNknVC7AJfpI7ZBThjQMC9pc4MU4FUopSyTYItIDf6cGLk2ICZxCuYwXkfv0-zSeRFcCSimdBeQaioIO_HU-BBNcVjNOkS0VUZQNJKbmByA6RE_l-yq-qYmEKrfTnBic1fmElS9BABnm7PROKcBK9YkJ99r4rMaCgYKAVUSARQSFQHGX2Mie4AeWO1kmPiOezxMExxkPw0206","token_type":"Bearer","refresh_token":"1//0gTA-49Cokc9pCgYIARAAGBASNwF-L9IrMXcOxDQi4ZO_l0F8H4atiKYtcPJ04imdqKqhiRPcDpwmRPeyna34BIS44P6TjU70n3o","expiry":"2025-08-30T04:25:26.737745722Z","expires_in":3599}
          EOF
          rclone listremotes

      - name: Restore VPS from backup archive
        id: restore
        run: |
          if rclone lsf gdrivveed:vps-backup/backup.tar.gz >/dev/null 2>&1; then
            echo "Backup archive found on Google Drive. Restoring..."
            sudo rclone copy gdrivveed:vps-backup/backup.tar.gz /tmp/backup.tar.gz --progress
            echo "Restoring from archive..."
            sudo tar -xzpvf /tmp/backup.tar.gz -C /
            echo "Backup restored successfully."
            echo "backup_found=true" >> "$GITHUB_OUTPUT"
          else
            echo "No backup archive found. Starting with a fresh VPS."
            echo "backup_found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Install Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh

      - name: Restore Tailscale state
        run: |
          echo "Restoring Tailscale state..."
          sudo mkdir -p /var/lib/tailscale
          if rclone lsf gdrivveed:vps-backup/tailscaled.state >/dev/null 2>&1; then
            sudo rclone copy gdrivveed:vps-backup/tailscaled.state /var/lib/tailscale/tailscaled.state --progress
            echo "Tailscale state restored successfully."
          else
            echo "No previous Tailscale state found. A new one will be created."
          fi

      - name: Start Tailscale
        run: |
          sudo tailscaled &
          sleep 8
          sudo tailscale up --authkey ${{ secrets.TAILSCALE_AUTHKEY }} --hostname=notfleppy || true
          echo "üîó Tailscale IP:"
          tailscale ip -4 || echo "Tailscale IP not found"
          echo "Backing up new Tailscale state file..."
          sudo rclone copy /var/lib/tailscale/tailscaled.state gdrivveed:vps-backup/ --progress

      - name: Start manual tmate session
        run: |
          # Install tmate
          sudo apt-get install -y tmate
          # Create socket
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          echo ""
          echo "üîë SSH:"
          tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}'
          echo ""
          echo "üåê Web:"
          tmate -S /tmp/tmate.sock display -p '#{tmate_web}'

      - name: Sleep to keep VPS alive
        run: sleep 21600

      - name: Backup essential data to archive (on completion)
        run: |
          echo "Creating essential data backup archive..."
          sudo tar -czpvf /tmp/backup.tar.gz /etc /home /root /var/www /var/lib/tailscale
          echo "Uploading backup archive to Google Drive..."
          sudo rclone copy /tmp/backup.tar.gz gdrivveed:vps-backup/ --progress
          echo "Backup uploaded successfully."

      - name: Final Backup on Cancel 
        if: ${{ cancelled() }}
        run: |
          echo "Workflow canceled. Performing final backup..."
          sudo tar -czpvf /tmp/backup.tar.gz /etc /home /root /var/www /var/lib/tailscale
          echo "Uploading final backup archive to Google Drive..."
          sudo rclone copy /tmp/backup.tar.gz gdrivveed:vps-backup/ --progress
          echo "Final backup completed."
