
name: 🕷️ Spidey's Persistent VPS Adventure

on:
  workflow_dispatch:
    inputs:
      force_fresh_install:
        description: '🔄 Force fresh install (ignore backups)'
        required: false
        default: 'false'
        type: boolean
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours

jobs:
  vps:
    runs-on: ubuntu-22.04
    timeout-minutes: 420  # 7 hours to be safe
    
    steps:
      - name: 🕸️ Web-slinging into action
        run: |
          echo "🕷️ ===================================================="
          echo "🕷️ SPIDEY'S VPS IS SWINGING INTO ACTION! 🕸️"
          echo "🕷️ Time: $(date)"
          echo "🕷️ Your friendly neighborhood VPS is starting up! 🏢"
          echo "🕷️ ===================================================="
          
      - name: 🔧 Installing Spidey's web-tools (rclone)
        run: |
          echo "🕷️ Installing rclone - Spidey's file-slinging tool! 🕸️"
          curl https://rclone.org/install.sh | sudo bash
          echo "✅ Rclone installed! Ready to swing files around! 🕸️"

      - name: 🔐 Setting up MEGA web connection
        run: |
          echo "🕷️ Decoding MEGA secrets with spider sense... 🕸️"
          mkdir -p ~/.config/rclone
          echo "${{ secrets.RCLONE_CONFIG }}" | base64 -d > ~/.config/rclone/rclone.conf 2>/dev/null || echo "${{ secrets.RCLONE_CONFIG }}" > ~/.config/rclone/rclone.conf
          echo "✅ MEGA connection established! 🕸️"

      - name: 🔍 Spider-sense: Checking for existing backups
        id: backup_check
        run: |
          echo "🕷️ Spider-sense is tingling... checking for backups! 🕸️"
          
          RESTORE_SUCCESS=false
          
          if [ "${{ github.event.inputs.force_fresh_install }}" = "true" ]; then
            echo "🔄 Force fresh install requested! Skipping all backups! 🕷️"
          else
            # Try GitHub artifacts first
            echo "🔍 Searching for GitHub artifacts..."
            # Note: In a real scenario, you'd need to download from previous workflow runs
            # This is a placeholder for the artifact download logic
            
            # Try MEGA backup
            echo "🔍 Checking MEGA for backup files..."
            if rclone ls mega:spidey-vps-backup/vps-backup.tar.gz > /dev/null 2>&1; then
              echo "🎯 Found MEGA backup! Spider-sense was right! 🕸️"
              echo "📥 Downloading backup from MEGA web..."
              rclone copy mega:spidey-vps-backup/vps-backup.tar.gz ./
              if [ -f "vps-backup.tar.gz" ]; then
                echo "🕷️ Extracting backup with spider precision..."
                sudo tar -xzf vps-backup.tar.gz -C / 2>/dev/null || echo "⚠️ Some files couldn't be restored (probably normal)"
                RESTORE_SUCCESS=true
                echo "✅ Backup restored! The web is back! 🕸️"
