Your current script is already configured to back up the entire VPS, including all installed apps and user data. The command rclone copy / gdrivveed:vps-backup/ is designed to copy the entire root filesystem (/), which contains all your installed programs, configuration files, and user data (like the aapanel and website files).
The reason you might think it's not working is likely the same permission issue you faced with the restore. The backup process needs sudo to access and copy files from system-protected directories. The last rclone copy command in your script also needs to be run with sudo.
Here is the complete, corrected code with sudo added to both the restore and backup steps to ensure the full system is backed up and restored correctly.
‚ö†Ô∏è Security Warning ‚ö†Ô∏è
This code includes hardcoded sensitive information, such as the rclone token. This is a major security risk. Anyone with access to your GitHub repository will be able to see and use these credentials. The recommended best practice is to always use GitHub Secrets to store sensitive data securely.
Full Corrected Workflow File
name: Continuous Persistent VPS

on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:

jobs:
  vps-session:
    runs-on: ubuntu-22.04
    timeout-minutes: 350

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Display startup info
        run: |
          echo "üîë VPS starting with hostname 'notfleppy'"
          echo "Creating username 'not' with password 'fleppy'"
          echo "Root password = fleppy"

      - name: Set hostname
        run: |
          sudo hostnamectl set-hostname notfleppy
          echo "127.0.0.1 notfleppy" | sudo tee -a /etc/hosts

      - name: Set root password
        run: |
          echo "root:fleppy" | sudo chpasswd

      - name: Create user 'not' with password 'fleppy'
        run: |
          if ! id -u not >/dev/null 2>&1; then
            sudo useradd -m -s /bin/bash not
            echo "not:fleppy" | sudo chpasswd
            sudo usermod -aG sudo not
            echo "not ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/not
          fi

      - name: Install prerequisites and rclone
        run: |
          sudo apt update
          sudo apt install -y tmate curl unzip sudo net-tools neofetch rclone

      - name: Set up rclone config
        run: |
          mkdir -p ~/.config/rclone
          cat > ~/.config/rclone/rclone.conf << EOF
          [gdrivveed]
          type = drive
          client_id = 534417340383-f4b86oa9dffhjuhdh4ekd38b0l9llnum.apps.googleusercontent.com
          client_secret = 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
          scope = drive.appfolder
          root_folder_id = appDataFolder
          token = {"access_token":"ya29.A0AS3H6Nzwim-1TEvkN3nVfRGSdWwIMFqMote2k5sALdNknVC7AJfpI7ZBThjQMC9pc4MU4FUopSyTYItIDf6cGLk2ICZxCuYwXkfv0-zSeRFcCSimdBeQaioIO_HU-BBNcVjNOkS0VUZQNJKbmByA6RE_l-yq-qYmEKrfTnBic1fmElS9BABnm7PROKcBK9YkJ99r4rMaCgYKAVUSARQSFQHGX2Mie4AeWO1kmPiOezxMExxkPw0206","token_type":"Bearer","refresh_token":"1//0gTA-49Cokc9pCgYIARAAGBASNwF-L9IrMXcOxDQi4ZO_l0F8H4atiKYtcPJ04imdqKqhiRPcDpwmRPeyna34BIS44P6TjU70n3o","expiry":"2025-08-30T04:25:26.737745722Z","expires_in":3599}
          team_drive = 
          EOF
          rclone listremotes

      - name: Restore VPS backup from rclone
        id: restore
        run: |
          if rclone lsf gdrivveed:vps-backup/ >/dev/null 2>&1; then
            echo "Backup found on Google Drive. Restoring..."
            sudo rclone copy gdrivveed:vps-backup/ / --exclude '*/.git/*' --exclude '/.rclone.conf' --progress
            echo "Backup restored successfully."
            echo "backup_found=true" >> "$GITHUB_OUTPUT"
          else
            echo "No backup found on Google Drive. Starting with a fresh VPS."
            echo "backup_found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Install Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh

      - name: Start Tailscale
        run: |
          sudo tailscaled &
          sleep 8
          sudo tailscale up --authkey ${{ secrets.TAILSCALE_AUTHKEY }} --hostname=notfleppy || echo "Tailscale already up"
          echo "üîó Tailscale IP:"
          tailscale ip -4 || echo "Tailscale IP not found"
        if: ${{ steps.restore.outputs.backup_found == 'true' }}

      - name: Start Tailscale (New IP) and immediately back up
        run: |
          sudo tailscaled &
          sleep 8
          sudo tailscale up --authkey ${{ secrets.TAILSCALE_AUTHKEY }} --hostname=notfleppy || echo "Tailscale already up"
          echo "üîó Tailscale IP:"
          tailscale ip -4 || echo "Tailscale IP not found"
          echo "Backup up new Tailscale state immediately."
          sudo chown -R $USER:$USER /var/lib/tailscale
          rclone copy /var/lib/tailscale/tailscaled.state gdrivveed:vps-backup/var/lib/tailscale/ --progress
        if: ${{ steps.restore.outputs.backup_found == 'false' }}

      - name: Start manual tmate session
        run: |
          # Install tmate
          sudo apt-get install -y tmate
          # Create socket
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          echo ""
          echo "üîë SSH:"
          tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}'
          echo ""
          echo "üåê Web:"
          tmate -S /tmp/tmate.sock display -p '#{tmate_web}'

      - name: Sleep to keep VPS alive
        run: sleep 21600

      - name: Backup VPS data to rclone
        run: |
          sudo chown -R $USER:$USER /var/lib/tailscale
          sudo rclone copy / gdrivveed:vps-backup/ --exclude '*/.git/*' --exclude '/.rclone.conf' --progress
          echo "Backup uploaded successfully."

