name: Persistent VPS with Backup + Tailscale

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'   # every 6 hours auto-run

jobs:
  vps-session:
    runs-on: ubuntu-22.04
    timeout-minutes: 360

    steps:
      # ===============================
      # Preparation
      # ===============================
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install base packages
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            sudo curl unzip zip tmate net-tools neofetch tar

      # ===============================
      # Setup user
      # ===============================
      - name: Create user jacky
        run: |
          set -e
          if ! id "jacky" &>/dev/null; then
            sudo useradd -m -s /bin/bash jacky
            echo "jacky:root" | sudo chpasswd
            sudo usermod -aG sudo jacky
          fi
          echo "‚úÖ User jacky created with password 'root'"

      # ===============================
      # Download & Restore VPS backup
      # ===============================
      - name: Download VPS backup if exists
        uses: actions/download-artifact@v4
        with:
          name: vps-backup-latest
          path: backup
        continue-on-error: true

      - name: Restore VPS files
        run: |
          set -e
          if [ -f backup/vps-backup.tar.gz ]; then
            echo "Restoring VPS backup..."
            sudo tar -xzf backup/vps-backup.tar.gz -C /
          else
            echo "‚ö†Ô∏è No VPS backup found, starting fresh."
          fi

      # ===============================
      # Download & Restore Tailscale state
      # ===============================
      - name: Download Tailscale state if exists
        uses: actions/download-artifact@v4
        with:
          name: tailscale-state
          path: ts-backup
        continue-on-error: true

      - name: Restore Tailscale state
        run: |
          set -e
          if [ -f ts-backup/tailscale-state.tar.gz ]; then
            echo "Restoring Tailscale state..."
            sudo mkdir -p /var/lib/tailscale
            sudo tar -xzf ts-backup/tailscale-state.tar.gz -C /var/lib/tailscale || true
          else
            echo "‚ö†Ô∏è No previous Tailscale state found."
          fi

      # ===============================
      # Install & Start Tailscale
      # ===============================
      - name: Install & Start Tailscale
        run: |
          set -e
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo systemctl enable --now tailscaled
          sleep 5

          if [ -f ts-backup/tailscale-state.tar.gz ]; then
            echo "‚úÖ Using restored Tailscale state..."
            sudo systemctl restart tailscaled
            sleep 5
            sudo tailscale status || true
          else
            echo "üîë Starting new Tailscale session with authkey..."
            sudo tailscale up --authkey ${{ secrets.TAILSCALE_AUTHKEY }} --hostname github-vps
          fi

      # ===============================
      # System Info
      # ===============================
      - name: System Info
        run: |
          echo "===== SYSTEM INFO ====="
          uname -a
          df -h
          free -h
          neofetch || true

      # ===============================
      # Keep VPS alive
      # ===============================
      - name: Keep VPS alive (tmate session)
        run: |
          set -e
          echo "Starting tmate session..."
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          echo "SSH:  $(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')"
          echo "Web:  $(tmate -S /tmp/tmate.sock display -p '#{tmate_web}')"
          echo "Leave session with Ctrl+D or cancel workflow."
          sleep 999999 || true
        timeout-minutes: 300

      # ===============================
      # Backup VPS files on cancel/exit
      # ===============================
      - name: Backup VPS files
        if: always()
        run: |
          set -e
          echo "üì¶ Creating VPS backup..."
          sudo mkdir -p backup
          sudo tar -czf backup/vps-backup.tar.gz \
            --exclude=/proc --exclude=/sys --exclude=/dev --exclude=/tmp \
            /etc /home || true
          sudo chown -R $USER:$USER backup

      - name: Backup Tailscale state
        if: always()
        run: |
          set -e
          echo "üì¶ Creating Tailscale backup..."
          sudo mkdir -p ts-backup
          sudo tar -czf ts-backup/tailscale-state.tar.gz -C /var/lib tailscale || true
          sudo chown -R $USER:$USER ts-backup

      # ===============================
      # Upload backups as artifacts
      # ===============================
      - name: Upload VPS backup
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vps-backup-latest
          path: backup
          retention-days: 3
          compression-level: 6
          overwrite: true

      - name: Upload Tailscale state
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tailscale-state
          path: ts-backup
          retention-days: 3
          compression-level: 6
          overwrite: true

      # ===============================
      # Completion summary
      # ===============================
      - name: Completion summary
        if: always()
        run: |
          echo ""
          echo "üéâ ================================="
          echo "‚úÖ VPS SESSION COMPLETED (or Cancelled ‚Äì Backup Saved)"
          echo "üéâ ================================="
          echo ""
          echo "üì¶ Artifacts saved:"
          echo "   - vps-backup-latest"
          echo "   - tailscale-state"
          echo ""
