name: Continuous Persistent VPS

on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:

jobs:
  vps-session:
    runs-on: ubuntu-22.04
    timeout-minutes: 350

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Display startup info
        run: |
          echo "🔑 VPS starting with hostname 'notfleppy'"
          echo "Creating username 'not' with password 'fleppy'"
          echo "Root password = fleppy"

      - name: Set hostname
        run: |
          sudo hostnamectl set-hostname notfleppy
          echo "127.0.0.1 notfleppy" | sudo tee -a /etc/hosts

      - name: Set root password
        run: |
          echo "root:fleppy" | sudo chpasswd

      - name: Create user 'not' with password 'fleppy'
        run: |
          if ! id -u not >/dev/null 2>&1; then
            sudo useradd -m -s /bin/bash not
            echo "not:fleppy" | sudo chpasswd
            sudo usermod -aG sudo not
            echo "not ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/not
          fi

      - name: Install prerequisites and rclone
        run: |
          sudo apt update
          sudo apt install -y tmate curl unzip sudo net-tools neofetch rclone

      - name: Set up rclone config
        run: |
          mkdir -p ~/.config/rclone
          cat > ~/.config/rclone/rclone.conf << EOF
          [gdrivveed]
          type = drive
          client_id = ${{ secrets.GDRIVE_CLIENT_ID }}
          client_secret = ${{ secrets.GDRIVE_CLIENT_SECRET }}
          scope = drive
          token = ${{ secrets.GDRIVE_TOKEN }}
          EOF
          rclone listremotes

      - name: Restore essential user data
        run: |
          if rclone lsf gdrivveed:vps-backup/backup.tar.gz >/dev/null 2>&1; then
            echo "Backup archive found on Google Drive. Restoring..."
            rclone copy gdrivveed:vps-backup/backup.tar.gz /tmp/backup.tar.gz --progress
            echo "Restoring from archive..."
            sudo tar -xzpvf /tmp/backup.tar.gz -C /

            if [ -f /tmp/apt-packages.list ]; then
              echo "Reinstalling apt packages..."
              sudo apt-get update
              sudo dpkg --set-selections < /tmp/apt-packages.list
              sudo apt-get dselect-upgrade -y
            fi

            echo "Backup restored successfully."
          else
            echo "No backup archive found. Starting with a fresh VPS."
          fi

      - name: Install Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh

      - name: Start Tailscale
        run: |
          sudo tailscaled &
          sleep 8
          sudo tailscale up --authkey ${{ secrets.TAILSCALE_AUTHKEY }} --hostname=notfleppy || echo "Tailscale already up"
          echo "🔗 Tailscale IP:"
          tailscale ip -4 || echo "Tailscale IP not found"

      - name: Start manual tmate session
        run: |
          sudo apt-get install -y tmate
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          echo ""
          echo "🔑 SSH:"
          tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}'
          echo ""
          echo "🌐 Web:"
          tmate -S /tmp/tmate.sock display -p '#{tmate_web}'

      - name: Sleep to keep VPS alive
        run: sleep 21600

      - name: Backup essential user data (on completion)
        run: |
          echo "Saving list of installed apt packages..."
          dpkg --get-selections > /tmp/apt-packages.list

          echo "Creating slim backup archive..."
          sudo tar -czpvf /tmp/backup.tar.gz \
            /home/not \
            /usr/local \
            /opt \
            /www \
            /etc/nginx \
            /etc/mysql \
            /var/lib/tailscale \
            /tmp/apt-packages.list || true

          echo "Uploading backup archive to Google Drive..."
          rclone copy /tmp/backup.tar.gz gdrivveed:vps-backup/ --progress
          echo "Backup uploaded successfully."

      - name: Final Backup on Cancel 
        if: ${{ cancelled() }}
        run: |
          echo "Workflow canceled. Performing final backup..."
          dpkg --get-selections > /tmp/apt-packages.list
          sudo tar -czpvf /tmp/backup.tar.gz \
            /home/not \
            /usr/local \
            /opt \
            /www \
            /etc/nginx \
            /etc/mysql \
            /var/lib/tailscale \
            /tmp/apt-packages.list || true
          echo "Uploading final backup archive to Google Drive..."
          rclone copy /tmp/backup.tar.gz gdrivveed:vps-backup/ --progress
          echo "Final backup completed."
