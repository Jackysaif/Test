name: Persistent VPS with Backup & Restore

on:
  workflow_dispatch:
  workflow_call:

jobs:
  vps:
    runs-on: ubuntu-22.04
    timeout-minutes: 360

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1. Install rclone first
      - name: Install rclone and dependencies
        run: |
          sudo apt update
          sudo apt install -y unzip curl tmate
          curl -Of https://downloads.rclone.org/rclone-current-linux-amd64.zip
          unzip -a rclone-current-linux-amd64.zip
          cd rclone-*-linux-amd64
          sudo cp rclone /usr/bin/
          sudo chown root:root /usr/bin/rclone
          sudo chmod 755 /usr/bin/rclone
          rclone version

      # 2. Configure MEGA from secrets
      - name: Setup rclone with MEGA
        run: |
          mkdir -p ~/.config/rclone
          cat > ~/.config/rclone/rclone.conf <<EOF
          [mega]
          type = mega
          user = ${{ secrets.MEGA_USER }}
          pass = ${{ secrets.MEGA_PASS }}
          EOF
          echo "🔑 MEGA configured successfully!"
          rclone ls mega:/ || echo "⚠️ Could not list MEGA (maybe empty?)"

      # 3. Create jacky:root
      - name: Create restricted user
        run: |
          if ! id -u jacky >/dev/null 2>&1; then
            sudo useradd -m -s /bin/bash jacky
            echo "jacky:root" | sudo chpasswd
            echo "User jacky created with password root"
          else
            echo "User jacky already exists"
          fi

      # 4. Set hostname
      - name: Set hostname
        run: |
          sudo hostnamectl set-hostname github-vps
          echo "Hostname set to $(hostname)"

      # 5. Restore backup from previous session
      - name: Restore backup if exists
        run: |
          mkdir -p restore
          if rclone copy mega:/vps-backup/latest.tar.gz restore/ --progress; then
            echo "📦 Restoring backup..."
            sudo tar -xzf restore/latest.tar.gz -C /
            echo "✅ User data and packages restored successfully"
            
            # Reinstall previously installed packages
            if [ -f /restore/installed-packages.list ]; then
              echo "📦 Reinstalling previous packages..."
              sudo apt-get update
              sudo dpkg --set-selections < /restore/installed-packages.list
              sudo apt-get upgrade -y
              sudo apt-get dselect-upgrade -y
            fi
          else
            echo "⚠️ No previous backup found, starting fresh"
          fi

      # 6. Setup Tailscale
      - name: Setup Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up --authkey ${{ secrets.TAILSCALE_AUTHKEY }} --hostname github-vps --ssh
          echo "🎉 Connected to Tailscale!"
          tailscale ip -4
          echo "👤 Username: jacky"
          echo "🔑 Password: root"

      # 7. Start tmate session (this will keep the workflow running)
      - name: Start tmate session
        run: |
          echo "🔗 Starting tmate session..."
          echo "Connect with: ssh $(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')"
          tmate -S /tmp/tmate.sock

      # 8. Backup user data and installed apps when tmate session ends
      - name: Backup VPS data on session end
        if: always() && !cancelled()
        run: |
          mkdir -p backup
          echo "📦 Backing up /home/jacky ..."
          sudo tar --exclude='*.tar.gz' --exclude='.cache' -czf backup/jacky-home.tar.gz /home/jacky 2>/dev/null || echo "Could not backup home directory"
          echo "📦 Backing up installed packages..."
          dpkg --get-selections > backup/installed-packages.list
          echo "📦 Creating full backup archive..."
          tar -czf backup/latest.tar.gz -C backup jacky-home.tar.gz installed-packages.list
          ls -lh backup/

      # 9. Upload backup to MEGA when session ends
      - name: Upload backup to MEGA on session end
        if: always() && !cancelled()
        run: |
          echo "☁️ Uploading backup to MEGA..."
          rclone mkdir mega:/vps-backup || true
          rclone copy backup/latest.tar.gz mega:/vps-backup --progress
          echo "✅ Backup uploaded successfully"

      # 10. Backup on workflow cancellation
      - name: Backup on workflow cancellation
        if: cancelled()
        run: |
          mkdir -p backup
          echo "⚠️ Workflow cancelled, backing up data..."
          echo "📦 Backing up /home/jacky ..."
          sudo tar --exclude='*.tar.gz' --exclude='.cache' -czf backup/jacky-home.tar.gz /home/jacky 2>/dev/null || echo "Could not backup home directory"
          echo "📦 Backing up installed packages..."
          dpkg --get-selections > backup/installed-packages.list
          echo "📦 Creating backup archive..."
          tar -czf backup/latest.tar.gz -C backup jacky-home.tar.gz installed-packages.list
          echo "☁️ Uploading backup to MEGA..."
          rclone mkdir mega:/vps-backup || true
          rclone copy backup/latest.tar.gz mega:/vps-backup --progress
          echo "✅ Backup completed before termination"
