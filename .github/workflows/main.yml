name: VPS Backup & Restore

on:
  workflow_dispatch:
    inputs:
      operation:
        description: "Choose backup or restore"
        required: true
        default: "backup"
        type: choice
        options:
          - backup
          - restore

jobs:
  backup-job:
    runs-on: ubuntu-latest
    if: github.event.inputs.operation == 'backup'

    env:
      BACKUP_DIR: backup

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y unzip zip curl tar mysql-client neofetch

      - name: Install Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo systemctl enable --now tailscaled
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH }} --hostname="github-runner-$(date +%s)"

      - name: Set backup date
        run: echo "BACKUP_DATE=$(date +%Y%m%d_%H%M%S)" >> $GITHUB_ENV

      - name: Prepare backup directories
        run: |
          mkdir -p $BACKUP_DIR/{home,etc,logs,db}

      - name: Backup critical directories
        run: |
          tar -czf $BACKUP_DIR/home_${BACKUP_DATE}.tar.gz /home || true
          tar -czf $BACKUP_DIR/etc_${BACKUP_DATE}.tar.gz /etc || true
          tar -czf $BACKUP_DIR/logs_${BACKUP_DATE}.tar.gz /var/log || true

      - name: Backup MySQL databases
        run: |
          mysqldump -u root --all-databases > $BACKUP_DIR/db/all_databases_${BACKUP_DATE}.sql || true
          tar -czf $BACKUP_DIR/db_${BACKUP_DATE}.tar.gz $BACKUP_DIR/db

      - name: Install rclone
        run: |
          curl -Of https://downloads.rclone.org/rclone-current-linux-amd64.zip
          unzip -o rclone-current-linux-amd64.zip
          cd rclone-*-linux-amd64
          sudo cp rclone /usr/bin/
          rclone version

      - name: Configure rclone
        run: |
          cat > rclone.conf <<EOF
          [gdrive]
          type = drive
          scope = drive
          token = {"access_token":"ya29.a0AbVbYXX-EXAMPLE","token_type":"Bearer","refresh_token":"1//0gEXAMPLEqwertyuiopasdfghjkl","expiry":"2025-09-01T09:45:22.582329Z"}
          client_id = 534417340383-f4b86oa9dffhjuhdh4ekd38b0l9llnum.apps.googleusercontent.com
          client_secret = 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
          EOF

      - name: Upload backups to Google Drive
        run: |
          rclone --config=rclone.conf copy $BACKUP_DIR gdrive:VPS_Backups/${BACKUP_DATE} -v

      - name: Cleanup local backups
        run: rm -rf $BACKUP_DIR rclone.conf rclone-*-linux-amd64*

      - name: Backup completion notification
        run: |
          echo ""
          echo "🎉 ================================="
          echo "✅ VPS BACKUP COMPLETED SUCCESSFULLY"
          echo "🎉 ================================="
          echo ""
          echo "📊 Backup Statistics:"
          du -sh $BACKUP_DIR 2>/dev/null || echo "Backup size calculation failed"
          echo ""
          echo "☁️ Uploaded to: Google Drive /VPS_Backups/${BACKUP_DATE}"

  restore-job:
    runs-on: ubuntu-latest
    if: github.event.inputs.operation == 'restore'

    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y unzip zip curl tar mysql-client

      - name: Install rclone
        run: |
          curl -Of https://downloads.rclone.org/rclone-current-linux-amd64.zip
          unzip -o rclone-current-linux-amd64.zip
          cd rclone-*-linux-amd64
          sudo cp rclone /usr/bin/
          rclone version

      - name: Configure rclone
        run: |
          cat > rclone.conf <<EOF
          [gdrive]
          type = drive
          scope = drive
          token = {"access_token":"ya29.a0AbVbYXX-EXAMPLE","token_type":"Bearer","refresh_token":"1//0gEXAMPLEqwertyuiopasdfghjkl","expiry":"2025-09-01T09:45:22.582329Z"}
          client_id = 534417340383-f4b86oa9dffhjuhdh4ekd38b0l9llnum.apps.googleusercontent.com
          client_secret = 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
          EOF

      - name: Download latest backup
        run: |
          LATEST=$(rclone --config=rclone.conf lsd gdrive:VPS_Backups | sort | tail -n1 | awk '{print $5}')
          echo "Restoring backup: $LATEST"
          rclone --config=rclone.conf copy gdrive:VPS_Backups/$LATEST ./restore -v
          echo "LATEST=$LATEST" >> $GITHUB_ENV

      - name: Extract and restore backups
        run: |
          echo "🔄 Extracting and restoring system files..."
          sudo tar -xzf restore/home_*.tar.gz -C / || true
          sudo tar -xzf restore/etc_*.tar.gz -C / || true
          sudo tar -xzf restore/logs_*.tar.gz -C / || true

          echo "🔄 Restoring MySQL databases..."
          if ls restore/db/all_databases_*.sql 1> /dev/null 2>&1; then
            sudo mysql -u root < restore/db/all_databases_*.sql || true
          else
            echo "⚠️ No SQL dump found in backup"
          fi

      - name: Restore completion notification
        run: |
          echo ""
          echo "====================================="
          echo "✅ AUTO RESTORE COMPLETED SUCCESSFULLY"
          echo "====================================="
          echo ""
          echo "📂 Restored from: Google Drive /VPS_Backups/${LATEST}"
