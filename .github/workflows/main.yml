- name: '♻️ Restore from Backup OR Initialize - Enhanced Aapanel Support'
  id: restore
  run: |
    set -euo pipefail
    echo "🔍 Checking for existing backup..."
    
    # Check if backup exists with proper error handling
    if timeout 90 rclone ls "${MEGA_REMOTE}/${BACKUP_NAME}" >/dev/null 2>&1; then
      echo "✅ Backup found! Downloading and restoring..."
      
      # Create restore directory
      mkdir -p /tmp/restore
      
      # Download backup with progress
      echo "📥 Downloading backup..."
      if rclone copy "${MEGA_REMOTE}/${BACKUP_NAME}" /tmp/restore/ --progress --retries 3; then
        echo "✅ Backup downloaded successfully"
      else
        echo "❌ Failed to download backup"
        exit 1
      fi
      
      # Verify backup integrity
      echo "🔍 Verifying backup integrity..."
      if tar -tzf "/tmp/restore/${BACKUP_NAME}" >/dev/null 2>&1; then
        echo "✅ Backup integrity verified"
      else
        echo "❌ Backup is corrupted"
        rm -f "/tmp/restore/${BACKUP_NAME}"
        exit 1
      fi
      
      # Extract backup
      echo "📦 Restoring system state..."
      sudo tar -xzf "/tmp/restore/${BACKUP_NAME}" --absolute-names -C / 2>/dev/null || {
        echo "⚠️ Some files failed to restore (normal for system files)"
      }
      
      # Special handling for Aapanel restoration
      echo "🔄 Special handling for Aapanel restoration..."
      
      # Reinstall Aapanel if /www directory exists but bt command is missing
      if [ -d "/www" ] && ! command -v bt >/dev/null 2>&1; then
        echo "⚠️ Aapanel detected but bt command missing - reinstalling..."
        
        # Download and install Aapanel
        curl -fsSL -o /tmp/install.sh "http://www.aapanel.com/script/install-ubuntu_6.0_en.sh" || \
        curl -fsSL -o /tmp/install.sh "https://raw.githubusercontent.com/aaPanel/aaPanel/master/script/install.sh" || {
          echo "❌ Failed to download Aapanel installer"
          # Continue without Aapanel
        }
        
        if [ -f "/tmp/install.sh" ]; then
          chmod +x /tmp/install.sh
          echo "y" | sudo bash /tmp/install.sh 2>/dev/null || {
            echo "⚠️ Aapanel reinstallation failed, but continuing..."
          }
        fi
      fi
      
      # Cleanup
      rm -f "/tmp/restore/${BACKUP_NAME}"
      
      # Remove old backup from MEGA
      echo "🗑️ Cleaning old backup from MEGA..."
      rclone delete "${MEGA_REMOTE}/${BACKUP_NAME}" || true
      
      echo "is_new_install=false" >> $GITHUB_OUTPUT
    else
      echo "ℹ️ No backup found. Setting up fresh installation..."
      
      # Create essential directories
      sudo mkdir -p \
        /home/jacky/.ssh \
        /opt /srv /var/www/html \
        /www/server \
        /root/.ssh
      
      echo "is_new_install=true" >> $GITHUB_OUTPUT
    fi

- name: '🔄 Repair Aapanel After Restoration'
  if: steps.restore.outputs.is_new_install == 'false'
  run: |
    set -euo pipefail
    echo "🔧 Repairing Aapanel after restoration..."
    
    # Check if Aapanel should exist
    if [ -d "/www" ]; then
      echo "📋 Aapanel installation detected, checking status..."
      
      # Repair bt command if missing
      if ! command -v bt >/dev/null 2>&1; then
        echo "⚠️ bt command missing - repairing..."
        
        # Try to restore bt command from common locations
        if [ -f "/www/server/panel/bt" ]; then
          sudo ln -sf /www/server/panel/bt /usr/bin/bt
          echo "✅ bt command restored from panel directory"
        else
          # Reinstall Aapanel
          echo "🔄 Reinstalling Aapanel..."
          curl -fsSL -o /tmp/install.sh "http://www.aapanel.com/script/install-ubuntu_6.0_en.sh" || \
          curl -fsSL -o /tmp/install.sh "https://raw.githubusercontent.com/aaPanel/aaPanel/master/script/install.sh" || {
            echo "❌ Failed to download Aapanel installer"
            exit 0
          }
          
          chmod +x /tmp/install.sh
          echo "y" | sudo bash /tmp/install.sh 2>/dev/null || {
            echo "⚠️ Aapanel reinstallation failed"
            exit 0
          }
        fi
      fi
      
      # Fix permissions
      echo "🔒 Fixing Aapanel permissions..."
      sudo chown -R www:www /www/wwwroot 2>/dev/null || true
      sudo chmod -R 755 /www/server 2>/dev/null || true
      
      # Restart Aapanel services
      echo "🔄 Restarting Aapanel services..."
      if command -v bt >/dev/null 2>&1; then
        sudo bt restart 2>/dev/null || {
          echo "⚠️ Aapanel restart failed, trying start instead..."
          sudo bt start 2>/dev/null || true
        }
        
        # Reset Aapanel credentials to known values
        echo "🔑 Resetting Aapanel credentials..."
        echo "jacky" | sudo bt 6 2>/dev/null || echo "⚠️ Could not set Aapanel username"
        echo "spidey123" | sudo bt 5 2>/dev/null || echo "⚠️ Could not set Aapanel password"
        
        echo "✅ Aapanel repair completed"
      else
        echo "⚠️ Aapanel detected but bt command still missing after repair attempt"
      fi
    else
      echo "ℹ️ No Aapanel installation detected, skipping repair"
    fi

- name: '🚀 Start and Configure Services - Enhanced Aapanel Support'
  run: |
    set -euo pipefail
    echo "🔄 Starting system services..."
    
    # Reload systemd
    sudo systemctl daemon-reload
    
    # Configure and start MariaDB
    echo "🗄️ Configuring MariaDB..."
    sudo systemctl enable mariadb
    sudo systemctl start mariadb || {
      echo "⚠️ MariaDB failed to start, attempting to fix..."
      sudo mysql_install_db --user=mysql --datadir=/var/lib/mysql || true
      sudo systemctl start mariadb || true
    }
    
    # Configure and start Apache
    echo "🌐 Configuring Apache..."
    sudo systemctl enable apache2
    sudo systemctl start apache2 || {
      echo "⚠️ Apache failed to start"
      sudo systemctl status apache2 --no-pager || true
    }
    
    # Configure SSH
    echo "🔑 Configuring SSH..."
    sudo systemctl enable ssh
    sudo systemctl start ssh
    
    # Start Aapanel if available - with enhanced detection
    if [ -d "/www" ] || command -v bt >/dev/null 2>&1; then
      echo "🎛️ Starting Aapanel..."
      
      # Check if panel service exists
      if systemctl list-unit-files | grep -q "panel.service"; then
        sudo systemctl enable panel 2>/dev/null || true
        sudo systemctl start panel 2>/dev/null || true
      fi
      
      # Use bt command if available
      if command -v bt >/dev/null 2>&1; then
        sudo bt start 2>/dev/null || {
          echo "⚠️ Aapanel failed to start via bt command"
          # Try alternative startup method
          if [ -f "/www/server/panel/script/start" ]; then
            sudo bash /www/server/panel/script/start 2>/dev/null || true
          fi
        }
      else
        echo "⚠️ bt command missing, trying direct startup..."
        if [ -f "/www/server/panel/script/start" ]; then
          sudo bash /www/server/panel/script/start 2>/dev/null || true
        fi
      fi
      
      # Wait for panel to start
      echo "⏳ Waiting for Aapanel to start..."
      sleep 10
      
      # Check panel status
      if command -v bt >/dev/null 2>&1; then
        echo "📋 Aapanel status:"
        sudo bt status 2>/dev/null || echo "⚠️ Could not get Aapanel status"
      fi
    fi
    
    # Service status check
    echo "📊 Service Status:"
    systemctl is-active mariadb apache2 ssh || true
    
    echo "✅ Services configured and started."
