name: Persistent VPS with Backup & Restore

on:
  workflow_dispatch:
    inputs:
      operation:
        description: "Choose operation (backup or restore)"
        required: true
        default: "backup"
  workflow_call:
  schedule:
    - cron: "0 */6 * * *" # Every 6 hours

jobs:
  vps:
    runs-on: ubuntu-22.04
    timeout-minutes: 360

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create jacky user
        run: |
          sudo useradd -m -s /bin/bash jacky || true
          echo "jacky:root" | sudo chpasswd
          echo "✅ User jacky created with password root"

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y unzip zip curl wget tmate rclone tailscale neofetch

      - name: Setup Tailscale
        run: |
          sudo tailscaled --state=/var/lib/tailscale/tailscaled.state &
          sleep 5
          sudo tailscale up --authkey ${{ secrets.TAILSCALE_AUTHKEY }} --hostname github-vps --ssh
          echo "🎉 Tailscale Connected"
          echo "🌐 Tailscale IP: $(tailscale ip -4)"
          echo "👤 User: jacky / Password: root"

      - name: Configure rclone (MEGA)
        run: |
          mkdir -p ~/.config/rclone
          cat > ~/.config/rclone/rclone.conf <<EOF
          [mega]
          type = mega
          user = rajeeshsksbx7@gmail.com
          pass = EfABK_S7bUsZtacq8JlaxYackzNv7KmZAQ1mpA
          EOF
          echo "✅ Rclone configured with MEGA remote"

      # === BACKUP SECTION ===
      - name: Backup VPS data
        if: github.event.inputs.operation == 'backup'
        run: |
          mkdir -p /opt/vps-backup
          # Home directory
          sudo cp -r /home/jacky /opt/vps-backup/ || true
          # Tailscale state
          sudo mkdir -p /opt/vps-backup/tailscale
          sudo cp /var/lib/tailscale/tailscaled.state /opt/vps-backup/tailscale/ || true
          # Aapanel data (optional)
          if [ -d "/www/server/panel" ]; then
            sudo cp -r /www/server/panel /opt/vps-backup/aapanel || true
          fi
          sudo chown -R $USER:$USER /opt/vps-backup
          zip -r backup.zip /opt/vps-backup
          echo "📦 Backup archive created"

      - name: Upload backup to MEGA
        if: github.event.inputs.operation == 'backup'
        run: |
          rclone copy backup.zip mega:vps-backups/ --progress
          echo "☁️ Backup uploaded to MEGA"

      # === RESTORE SECTION ===
      - name: Download latest backup
        if: github.event.inputs.operation == 'restore'
        run: |
          mkdir -p restore
          rclone copy mega:vps-backups/backup.zip restore/ --progress || echo "⚠️ No backup found"
          if [ -f restore/backup.zip ]; then
            unzip restore/backup.zip -d /
            echo "✅ Backup restored successfully"
          else
            echo "❌ No backup available to restore"
          fi

      # === Ensure backup runs even on cancel ===
      - name: Final backup on cancel
        if: ${{ cancelled() }}
        run: |
          echo "⚠️ Workflow cancelled, saving final backup..."
          mkdir -p /opt/vps-backup-final
          sudo cp -r /home/jacky /opt/vps-backup-final/ || true
          sudo cp /var/lib/tailscale/tailscaled.state /opt/vps-backup-final/ || true
          zip -r final-backup.zip /opt/vps-backup-final
          rclone copy final-backup.zip mega:vps-backups/ --progress || true
          echo "📦 Final backup uploaded due to cancellation"
